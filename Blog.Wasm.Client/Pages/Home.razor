@page "/"
@inject HttpClient Http

<PageTitle>Home</PageTitle>

<MudText Typo="Typo.h3" Class="mt-3" GutterBottom="true">Festina lente!</MudText>
<MudText Class="mb-2">You found me! Welcome to my website.</MudText>

<MudPaper Class="mb-2" Style="width: fit-content">
    <MudText Style="white-space: pre-wrap; line-height: 1.15; font-size: 87.5%; letter-spacing: 2px;" 
>                            \\\\\\\
                            \\\\\\\\\\\\
                        \\\\\\\\\\\\\\\
-----------,-|           |C>   // )\\\\|
        ,','|          /    || ,'/////|
---------,','  |         (,    ||   /////
        ||    |          \\  ||||//''''|
        ||    |           |||||||     _|
        ||    |______      `````\____/ \
        ||    |     ,|         _/_____/ \
        ||  ,'    ,' |        /          |
        ||,'    ,'   |       |         \  |
_________|/    ,'     |      /           | |
_____________,'      ,',_____|      |    | |
            |     ,','      |      |    | |
            |   ,','    ____|_____/    /  |
            | ,','  __/ |             /   |
_____________|','   ///_/-------------/   |
            |===========,'</MudText>
</MudPaper>

<MudDivider Class="my-4" />

<MudText Typo="Typo.h5" Class="mb-3">Recent Posts</MudText>

@if (recentPosts == null)
{
    <MudPaper Class="mb-2" Style="width: 20rem">
        <MudSkeleton />
        <MudSkeleton />
        <MudSkeleton />
    </MudPaper>
}
else if (recentPosts.Count == 0)
{
    <MudText>No posts available.</MudText>
}
else
{
    <MudGrid>
        @foreach (var post in recentPosts)
        {
            <MudItem xs="12" sm="6" md="4">
                <PostCard Post="post" />
            </MudItem>
        }
    </MudGrid>
    <MudButton Href="/posts" Variant="Variant.Text" EndIcon="@Icons.Material.Filled.ArrowForward" Color="Color.Primary">See all posts</MudButton>
}

<MudDivider Class="my-4" />

<MudText Class="mt-4 mb-8">

</MudText>

<Footer />

@code {
    private List<Core.Post> recentPosts = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var index = await Http.GetFromJsonAsync<Core.Index>("_posts/index.json");
            recentPosts = index?.Posts?.OrderByDescending(p => p.Date).Take(3).ToList() ?? new List<Core.Post>();
        }
        catch (Exception)
        {
            recentPosts = new List<Core.Post>();
        }   
    }
}

