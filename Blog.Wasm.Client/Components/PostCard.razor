@using Blog.Wasm.Core

<MudPaper Elevation="2" Class="pa-4 mb-3 position-relative">
    <MudLink Href="@($"/posts/{Post.FileName.Replace(".md", "")}")" Class="text-decoration-none">
        <MudText Typo="Typo.h6" Class="mb-1">@Post.Title</MudText>
    </MudLink>
    
    <div class="d-flex flex-wrap align-center mb-2">
        <MudText T="String" Typo="Typo.caption" Color="Color.Secondary">
            @Post.Date.ToString("MMMM dd, yyyy")
        </MudText>
        
        <MudChip 
            T="String"
            Size="Size.Small" 
            Color="Color.Default" 
            Class="ml-2 my-0 py-0 min-width-0" 
            Style="height: 24px;">
            <MudIcon Icon="@Icons.Material.Filled.Schedule" Size="Size.Small" Class="mr-1" />
            <span>@CalculateReadingTime(Post.Content) min read</span>
        </MudChip>
    </div>
    
    @if (Post.Tags != null && Post.Tags.Any())
    {
        <div class="d-flex flex-wrap gap-1 mt-2">
            @foreach (var tag in Post.Tags.Take(3))
            {
                <MudChip 
                    T="String" 
                    Size="Size.Small" 
                    Color="Color.Primary" 
                    Variant="Variant.Outlined" 
                    Label="true">
                    @tag
                </MudChip>
            }
            @if (Post.Tags.Count > 3)
            {
                <MudChip T="String" Size="Size.Small" Color="Color.Default" Variant="Variant.Text">
                    +@(Post.Tags.Count - 3)
                </MudChip>
            }
        </div>
    }
</MudPaper>

@code {
    [Parameter]
    public Post Post { get; set; } = default!;

    private int CalculateReadingTime(string content)
    {
        if (string.IsNullOrEmpty(content))
            return 1;

        const int wordsPerMinute = 230;
        
        var wordCount = content.Split(new[] { ' ', '\n', '\r', '\t' }, StringSplitOptions.RemoveEmptyEntries).Length;
        
        var minutes = Math.Max(1, (int)Math.Ceiling(wordCount / (double)wordsPerMinute));
        
        return minutes;
    }
}